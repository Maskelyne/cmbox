*,
*::before,
*::after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
}

html,
body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

img {
  width: 100%;
  height: auto;
}

a {
  text-decoration: none;
  color: $dark-black;

  &:hover {
    color: $dark-red;
  }

  &:active {
    color: $dark-red;
    font-weight: $bold;
  }
}

h1 {
  margin: 25px 0;
  font-family: $proximaBold;
  font-size: 48px;
  line-height: 48px;
  font-weight: $normal;
  text-align: center;

  @media (max-width: $tablet-width) {
    font-size: 24px;
    line-height: 24px;
  }
}

h2 {
  margin: 0;
  font-family: $proximaBold;
  font-size: 24px;
  line-height: 24px;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: $black;

  @media (max-width: $tablet-width) {
    font-size: 16px;
    line-height: 24px;
  }
}

h3 {
  margin: 0;
  font-size: 18px;
  line-height: 18px;
}

body {
  min-width: 320px;
  min-height: 100vh;
  font-family: $proximaNova;
  font-size: 17px;
  line-height: 24px;
  font-weight: $normal;
  color: $dark-black;
  display: flex;
  flex-direction: column;
  overflow-x: hidden;

  @media (max-width: $tablet-width) {
    font-size: 16px;
  }
}

main {
  flex-grow: 1;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  white-space: nowrap;
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: inset(100%);
}

.container {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: $desktop-padding;

  @media (max-width: $tablet-width) {
    padding: $tablet-padding;
  }
}

.gray-box {
  background-color: $light-gray;
  z-index: 0;
}

//.page-main {
//  position: absolute;
//  top: 65px;
//  left: 0;
//  z-index: -2;
//
//  @media (max-width: $tablet-width) {
//    display: none;
//  }
//}

.main {
  @media (max-width: $tablet-width) {
    background-image: url("../img/svg/bckg-main.svg");
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
  }
}

.black {
  color: $dark-black;

  a {
    color: $dark-black;
  }

  p::before {
    background-color: $dark-black;
  }
}

.white {
  color: $white;

  a {
    color: $white;
  }

  p::before {
    background-color: $white;
  }
}

.black .portfolio-page__scroll-mouse {
  border: solid 2px $dark-black;

  &::after {
    background-color: $dark-black;
  }
}

.grecaptcha-badge {
  overflow: hidden;
  opacity: 0;
}

.snow-box {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -2;
  background-image: url("../img/svg/bg-main.svg");

  @media (max-width: $tablet-width) {
    display: none;
  }
}

@function random_range($min, $max) {
  $rand: random();
  $random_range: $min + floor($rand * (($max - $min) + 1));
  @return $random_range;
}

.snow {
  $total: 200;
  position: absolute;
  width: 10px;
  height: 10px;
  background: white;
  border-radius: 50%;
  z-index: -1;

  @for $i from 1 through $total {
    $random-x: random(1000000) * 0.0001vw;
    $random-offset: random_range(-100000, 100000) * 0.0001vw;
    $random-x-end: $random-x + $random-offset;
    $random-x-end-yoyo: $random-x + ($random-offset / 2);
    $random-yoyo-time: random_range(30000, 80000) / 100000;
    $random-yoyo-y: $random-yoyo-time * 100vh;
    $random-scale: random(10000) * 0.0001;
    $fall-duration: random_range(10, 30) * 1s;
    $fall-delay: random(30) * -1s;

    &:nth-child(#{$i}) {
      opacity: random(10000) * 0.0001;
      transform: translate($random-x, -10px) scale($random-scale);
      animation: fall-#{$i} $fall-duration $fall-delay linear infinite;
    }

    @keyframes fall-#{$i} {
      #{percentage($random-yoyo-time)} {
        transform: translate($random-x-end, $random-yoyo-y) scale($random-scale);
      }

      to {
        transform: translate($random-x-end-yoyo, 100vh) scale($random-scale);
      }
    }
  }
}
